param.app-name.name=App Name
param.app-name.description=The name of the application.

param.app-fs-name.name=App File System Name
param.app-fs-name.description=The name of the application suitable for file system use.  Typically this is just letters, numbers, dots, and dashes.

param.app-resource.description=All of the files to place in the resources directory.  Including all needed jars as assets.
param.app-resources.name=Resources

param.app-resource-list.description=A List of RelativeFileSet objects containing all of the files to place in the resources directory.  Including all needed jars as assets.
param.app-resources-list.name=Resources List

param.build-root.name=Build Root
param.build-root.description=The directory in which to use and place temporary files.

param.category.name=Category
param.category.description=The category oor group of the application.  Generally speaking you will also want to specify application specific categories as well.
param.category.default=Unknown

param.copyright.name=Copyright
param.copyright.description=The copyright for the application.
param.copyright.default=Copyright (C) {0,date,YYYY}

param.description.name=Description
param.description.description=A longer description of the application
param.description.default=none

param.desktop-shortcut-hint.name=Shortcut Hint
param.desktop-shortcut-hint.description=If the bundler can create desktop shortcuts, should it make one?

param.icon-file.name=Icon
param.icon-file.description=The main icon of the application bundle.

param.identifier.name=Identifier
param.identifier.description=What is the machine readable identifier of this application?  The format should be a DNS name in reverse order, such as com.example.myapplication.

param.arguments.name=Command Line Arguments
param.arguments.description=Command Line Arguments to be passed to the main class if no arguments are specified by the launcher.

param.jvm-options.name=JVM Options
param.jvm-options.description=JVM flags and options to be passed in.

param.jvm-system-properties.name=JVM System Properties
param.jvm-system-properties.description=JVM System Properties (of the -Dname\=value variety).

param.license-file.name=License
param.license-file.description=The license file, relative to the assembled application directory.

param.license-type.name=
param.license-type.description=
param.license-type.default=Unknown

param.main-class.name=Main Class
param.main-class.description=The main class for the application.  Either a javafx.application.Application instance or a java class with a main method.

param.classpath.name=Main Jar Classpath
param.classpath.description=The classpath from the main jar of the application, relative to the assembled application directory.

param.main-jar.name=Main Jar
param.main-jar.description=The main jar of the application.  This jar should have the main-class, and is relative to the assembled application dir.

param.service-hint.name=Service Hint
param.service-hint.description=The bundler should register the application as service/daemon

param.start-on-install.name=Start On Install
param.start-on-install.description=Controls whether the service/daemon should be started on install

param.stop-on-uninstall.name=Stop On Uninstall
param.stop-on-uninstall.description=Controls whether the service/daemon should be stopped on uninstall

param.run-at-startup.name=Run At Startup
param.run-at-startup.description=Controls whether the service/daemon should be started during system startup

param.sign-bundle.name=Sign Bundle
param.sign-bundle.description=If the bundler supports signing, request that the bundle be signed.  Default value varies between bundlers.  Bundlers that do not support signing will silently ignore this setting.

param.menu-shortcut-hint.name=Menu Hint
param.menu-shortcut-hint.description=If the bundler can add the application to the system menu, should it?

param.name.name=Name
param.name.description=The name of the application.

param.preferences-id.name=Preferences ID
param.preferences-id.description=The preferences node to search for User JVM Options.  The format be a slash delimited version of the main package name, such as "com/example/myapplication".

param.preloader.name=JavaFX Preloader Class Name
param.preloader.description=For JavaFX applications only, this is the Fully Qualified Class Name of the preloader class.  This class needs to exist in the classpath, preferably early in the path.

param.runtime.name=JRE
param.runtime.description=The Java Runtime to co-bundle.  The default value is the current JRE running the bundler.  A value of null will cause no JRE to be co-bundled and the system JRE will be used to launch the application.

param.system-wide.name=System Wide
param.system-wide.description=Should this application attempt to install itself system wide, or only for each user?  Null means use the system default.

param.title.name=Title
param.title.description=A title for the application.

param.use-javafx-packaging.name=FX Packaging
param.use-javafx-packaging.description=Should we use the JavaFX packaging conventions?

param.user-jvm-options.name=User JVM Options
param.user-jvm-options.description=JVM Options the user may override, along with their default values.

param.vendor.name=Vendor
param.vendor.description=The vendor of the application.
param.vendor.default=Unknown

param.version.name=Version
param.version.description=The version of this application.
param.version.default=1.0

param.verbose.name=Verbose
param.verbose.description=Flag to print out more information and saves configuration files for bundlers.

param.drop-in-resources-root.name=Drop-In Resources Root
param.drop-in-resources-root.description=The directory to look for bundler specific drop in resources.  If not set the classpath will be searched.

param.secondary-launchers.name=Secondary Launchers
param.secondary-launchers.description=A collection of bundle param info for secondary launchers

param.file-associations.name=File Associations
param.file-associations.description=A list of maps where each map describes a file association.  Uses the "fileAssociation." series of bundle arguments in each map.

param.fa-extension.name=File Association Extension
param.fa-extension.description=The File Extension to be associated, just the extension no dots.

param.fa-content-type.name=File Association Content Type
param.fa-content-type.description=Content Type to be associated.  Such as application/x-vnd.my-awesome-app.

param.fa-icon.name=File Association Icon
param.fa-icon.description=The Icon to be used for associated files.  Defaults to the application icon.

param.fa-description.name=File Association Description
param.fa-description.description=The description to be used for associated files.  The default is "<appName> File".

param.commercial-features.name=Unlock Commercial Features
param.commercial-features.description=Some options require commercial features to be unlocked.  This must be passed in as true to unlock those features.  Otherwise they will be ignored.

param.com-app-cds.name=Enable AppCDS
param.com-app-cds.description=Enabled and package with Application Class Data Sharing, including generation of .jsa file.

param.com-app-cds-root.name=AppCDS Root Classes
param.com-app-cds-root.description=List of "root classes" for AppCDS to generate class sharing data from.  Default is the main class.

error.required-parameter={0} is a required parameter.
error.no-main-class-with-main-jar=An application class was not specified nor was one found in the jar {0}
error.no-main-class-with-main-jar.advice=Please specify a applicationClass or ensure that the jar {0} specifies one in the manifest.
error.no-main-class-with-classpath=An application class was not specified nor was one found in the supplied classpath
error.no-main-class-with-classpath.advice=Please specify a applicationClass or ensure that the classpath has a jar containing one in the manifest.
error.no-main-class=An application class was not specified nor was one found in the supplied application resources
error.no-main-class.advice=Please specify a applicationClass or ensure that the appResources has a jar containing one in the manifest.
error.main-jar-does-not-exist=The configured main jar does not exist {0}
error.main-jar-does-not-exist.advice=The main jar must be specified relative to the app resources (not an absolute path), and must exist within those resources.

message.fx-app-does-not-match-specified-main=The jar {0} has an FX Application class{1} that does not match the declared main {2}
message.main-class-does-not-match-specified-main=The jar {0} has a main class {1} that does not match the declared main {2}
